module myAnd(D,Bi,A,B,C);
    output D, Bi;
    input A, B, C;
    assign D = (A ^ B) ^ C;
    assign Bi = (~A & B)||(~(A ^ B)&C);
endmodule

module main;

    reg A, B, C;
    wire D, Bi;
    myAnd test(D, Bi, A, B, C);
    
    initial begin
        A = 1'b0; B = 1'b0; C = 1'b0;
        #10
        A = 1'b0; B = 1'b0; C = 1'b1;
        #10
        A = 1'b0; B = 1'b1; C = 1'b0; 
        #10
        A = 1'b0; B = 1'b1; C = 1'b1;
        #10
        A = 1'b1; B = 1'b0; C = 1'b0;
        #10
        A = 1'b1; B = 1'b0; C = 1'b1;
        #10
        A = 1'b1; B = 1'b1; C = 1'b0; 
        #10
        A = 1'b1; B = 1'b1; C = 1'b1;
      $finish ;
    end
    initial begin
        $monitor("A = %d, B = %d, C = %d, D = %d, Bi = %d", A, B, C, D, Bi);
    end
endmodule