module Encoder(A,B,C,D,E,F, I);
    output E, F;
    input A, B, C, D, I;
    assign E = I&(A | B);
    assign F = I&(A | C);
endmodule

module main;

    reg A, B, C, D, I;
    wire E, F;
    Encoder test(A, B, C, D, E, F, I);
    
    initial begin  
        I = 1'b0; A = 1'b0; B = 1'b0; C = 1'b0; D = 1'b1;
        #10
        I = 1'b0; A = 1'b0; B = 1'b0; C = 1'b1; D = 1'b0;
        #10
        I = 1'b0; A = 1'b0; B = 1'b1; C = 1'b0; D = 1'b0;
        #10
        I = 1'b0; A = 1'b1; B = 1'b0; C = 1'b0; D = 1'b0;
        #10
        I =1'b1; A = 1'b0; B = 1'b0; C = 1'b0; D = 1'b1;
        #10
        I =1'b1; A = 1'b0; B = 1'b0; C = 1'b1; D = 1'b0;
        #10
        I =1'b1; A = 1'b0; B = 1'b1; C = 1'b0; D = 1'b0;
        #10
        I =1'b1; A = 1'b1; B = 1'b0; C = 1'b0; D = 1'b0;
      $finish ;
    end
    initial begin
        $monitor("I = %d, A = %d, B = %d, C = %d, D = %d, E = %d, F = %d", I, A, B, C, D, E, F);
    end
endmodule